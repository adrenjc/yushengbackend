worker_processes auto;
error_log logs/error.log;
pid logs/nginx.pid;

events {
    worker_connections 1024;
    use select;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # 文件上传大小限制，匹配后端配置的10MB
    client_max_body_size 20M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/javascript 
        application/xml+rss 
        application/json 
        application/xml
        image/svg+xml;

    # 上游后端服务器配置
    upstream smart_match_backend {
        server 127.0.0.1:8080;
        keepalive 16;
    }

    # HTTP -> HTTPS 重定向
    server {
        listen 80;
        server_name yssh.cc www.yssh.cc;
        return 301 https://www.yssh.cc$request_uri;
    }

    # HTTPS 主站点配置
    server {
        listen 443 ssl http2;
        server_name www.yssh.cc;

        # SSL 证书配置（请根据实际路径修改）
        ssl_certificate     C:/nginx/ssl/yssh.cc.pem;
        ssl_certificate_key C:/nginx/ssl/yssh.cc.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # 安全头配置
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # 生产环境可以注释掉这行
        add_header X-Robots-Tag "noindex, nofollow" always;

        # 前端静态文件根目录（Next.js 静态导出目录）
        root D:/code/yushengfrontend/out;
        index index.html;

        # API 代理到后端
        location /api/ {
            proxy_pass http://smart_match_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 文件上传相关配置
            proxy_connect_timeout       300;
            proxy_send_timeout          300;
            proxy_read_timeout          300;
            proxy_buffer_size           4k;
            proxy_buffers               4 32k;
            proxy_busy_buffers_size     64k;
            proxy_temp_file_write_size  64k;
        }

        # 健康检查端点代理
        location /health {
            proxy_pass http://smart_match_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 上传文件访问代理
        location /uploads/ {
            proxy_pass http://smart_match_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 缓存上传的文件
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # 前端静态资源缓存配置
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|mp4|woff|woff2|ttf|eot|map)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # 尝试直接访问文件，如果不存在则返回404
            try_files $uri =404;
        }

        # Next.js 静态导出的路由处理
        location / {
            try_files $uri $uri.html $uri/ /index.html;
            
            # HTML 文件不缓存
            location ~* \.html$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
        }

        # 安全配置 - 隐藏敏感文件
        location ~ /\. { 
            deny all; 
            access_log off; 
            log_not_found off; 
        }
        
        location ~ ~$ { 
            deny all; 
            access_log off; 
            log_not_found off; 
        }

        # 隐藏 Next.js 相关文件
        location ~* /(_next|\.next)/ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 错误页面配置
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        # 日志配置
        access_log logs/smart-match.access.log main;
        error_log  logs/smart-match.error.log;
    }

    # 裸域跳转到 www
    server {
        listen 443 ssl http2;
        server_name yssh.cc;

        ssl_certificate     C:/nginx/ssl/yssh.cc.pem;
        ssl_certificate_key C:/nginx/ssl/yssh.cc.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        return 301 https://www.yssh.cc$request_uri;
    }
}
